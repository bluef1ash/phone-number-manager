<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.phonenumbermanager.mapper.CommunityResidentMapper">
    <resultMap type="com.github.phonenumbermanager.entity.CommunityResident" id="commonResultMap">
        <result column="address" property="address"/>
        <result column="system_user_id" property="systemUserId"/>
        <result column="company_id" property="companyId"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.CommunityResident" id="baseResultMap"
               extends="commonResultMap">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="version" property="version"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.CommunityResident" id="aliasResultMap"
               extends="commonResultMap">
        <id column="community_resident_id" property="id"/>
        <result column="community_resident_name" property="name"/>
        <result column="community_resident_create_time" property="createTime"/>
        <result column="community_resident_update_time" property="updateTime"/>
        <result column="community_resident_version" property="version"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.CommunityResident" id="collectionResultMap"
               extends="aliasResultMap">
        <association property="company"
                     resultMap="com.github.phonenumbermanager.mapper.CompanyMapper.collectionResultMap"/>
        <association property="systemUser"
                     resultMap="com.github.phonenumbermanager.mapper.SystemUserMapper.collectionResultMap"/>
        <collection property="phoneNumbers" ofType="com.github.phonenumbermanager.entity.PhoneNumber"
                    resultMap="com.github.phonenumbermanager.mapper.PhoneNumberMapper.aliasResultMap"/>
    </resultMap>
    <select id="selectAndCompanyById" resultMap="collectionResultMap">
        SELECT pm_community_resident.id AS 'community_resident_id',
            pm_community_resident.name AS 'community_resident_name',
            pm_community_resident.address,
            pm_phone_number.phone_number,
            pm_community_resident.create_time AS 'community_resident_create_time',
            pm_community_resident.update_time AS 'community_resident_update_time',
            pm_system_user.id AS 'system_user_id',
            pm_system_user.username,
            pm_community_resident.company_id,
            pm_company.name AS 'company_name'
        FROM pm_community_resident
                 LEFT JOIN pm_company ON pm_community_resident.company_id = pm_company.id
                 LEFT JOIN pm_system_user ON pm_community_resident.system_user_id = pm_system_user.id
                 LEFT JOIN pm_community_resident_phone_number
        ON pm_community_resident.id = pm_community_resident_phone_number.community_resident_id
                 LEFT JOIN pm_phone_number ON pm_community_resident_phone_number.phone_number_id = pm_phone_number.id
        WHERE pm_community_resident.id = #{id}
    </select>
    <select id="countForGroupCompany" resultType="java.util.Map">
        SELECT pm_company.name, count(pm_community_resident.id) AS 'value'
        FROM pm_community_resident
        LEFT JOIN pm_company ON pm_community_resident.company_id = pm_company.id
        <where>
            <foreach collection="companyIds" item="companyId" separator="or">
                pm_community_resident.company_id = #{companyId}
            </foreach>
        </where>
        GROUP BY pm_company.id
    </select>
    <select id="selectListByCompanyIds" resultMap="collectionResultMap">
        SELECT pm_community_resident.id AS 'community_resident_id',
        pm_community_resident.name AS 'community_resident_name',
        pm_community_resident.address,
        pm_system_user.username,
        pm_company.name AS 'company_name',
        pm_company.parent_id AS 'company_parent_id',
        pm_phone_number.phone_number
        FROM pm_community_resident
        LEFT JOIN pm_company ON pm_community_resident.company_id = pm_company.id
        LEFT JOIN pm_system_user ON pm_community_resident.system_user_id = pm_system_user.id
        LEFT JOIN pm_community_resident_phone_number ON pm_community_resident.id =
        pm_community_resident_phone_number.community_resident_id
        LEFT JOIN pm_phone_number ON pm_community_resident_phone_number.phone_number_id = pm_phone_number.id
        <where>
            <foreach collection="companyIds" item="companyId" separator="OR">
                pm_community_resident.company_id = #{companyId}
            </foreach>
        </where>
    </select>
    <select id="selectBySearchVo" resultMap="collectionResultMap">
        SELECT
        pm_community_resident.id AS 'community_resident_id',
        pm_community_resident.name AS 'community_resident_name',
        pm_community_resident.address,
        pm_phone_number.phone_number,
        pm_community_resident.create_time AS 'community_resident_create_time',
        pm_community_resident.update_time AS 'community_resident_update_time',
        pm_company.name AS 'company_name'
        FROM
        pm_community_resident
        LEFT JOIN pm_company ON pm_community_resident.company_id = pm_company.id
        LEFT JOIN pm_community_resident_phone_number ON pm_community_resident.id =
        pm_community_resident_phone_number.community_resident_id
        LEFT JOIN pm_phone_number ON pm_community_resident_phone_number.phone_number_id = pm_phone_number.id
        <where>
            <if test="searchVo.name != null">
                pm_community_resident.name LIKE CONCAT('%', #{searchVo.name}, '%')
            </if>
            <if test="searchVo.address != null">
                AND pm_community_resident.address LIKE CONCAT('%', #{searchVo.address}, '%')
            </if>
            <if test="searchVo.phoneNumber != null">
                AND pm_phone_number.phone_number LIKE CONCAT('%', #{searchVo.phoneNumber}, '%')
            </if>
            <if test="searchVo.companyId != null">
                AND (pm_company.id = #{searchVo.companyId} OR pm_company.parent_id = #{searchVo.companyId})
            </if>
        </where>
        ORDER BY pm_community_resident.id
    </select>
</mapper>
