<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.phonenumbermanager.mapper.DormitoryManagerMapper">
    <resultMap type="com.github.phonenumbermanager.entity.DormitoryManager" id="commonResultMap">
        <result column="gender" property="gender"/>
        <result column="birth" property="birth"/>
        <result column="political_status" property="politicalStatus"
                typeHandler="com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler"/>
        <result column="employment_status" property="employmentStatus"
                typeHandler="com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler"/>
        <result column="education" property="education"
                typeHandler="com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler"/>
        <result column="address" property="address"/>
        <result column="manager_address" property="managerAddress"/>
        <result column="manager_count" property="managerCount"/>
        <result column="subcontractor_id" property="subcontractorId"/>
        <result column="community_id" property="communityId"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.DormitoryManager" id="baseResultMap"
               extends="commonResultMap">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.DormitoryManager" id="aliasResultMap"
               extends="commonResultMap">
        <id column="dormitory_manager_id" property="id"/>
        <result column="dormitory_manager_name" property="name"/>
        <result column="dormitory_manager_create_time" property="createTime"/>
        <result column="dormitory_manager_update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.DormitoryManager" id="collectionResultMap"
               extends="aliasResultMap">
        <collection property="phoneNumbers" ofType="com.github.phonenumbermanager.entity.PhoneNumber"
                    resultMap="com.github.phonenumbermanager.mapper.PhoneNumberMapper.aliasResultMap"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.DormitoryManager" id="associationResultMap"
               extends="aliasResultMap">
        <association property="community" column="community_id"
                     resultMap="com.github.phonenumbermanager.mapper.CommunityMapper.correlationResultMap"/>
        <association property="subcontractor" column="subcontractor_id"
                     resultMap="com.github.phonenumbermanager.mapper.SubcontractorMapper.aliasResultMap"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.DormitoryManager" id="correlationResultMap"
               extends="collectionResultMap">
        <association property="community" column="community_id"
                     resultMap="com.github.phonenumbermanager.mapper.CommunityMapper.correlationResultMap"/>
        <association property="subcontractor" column="subcontractor_id"
                     resultMap="com.github.phonenumbermanager.mapper.SubcontractorMapper.aliasResultMap"/>
    </resultMap>
    <select id="selectAndCommunityByCommunityIds" resultMap="correlationResultMap">
        SELECT
        `pm_dormitory_manager`.`id` AS 'dormitory_manager_id',
        `pm_dormitory_manager`.`name` AS 'dormitory_manager_name',
        `pm_dormitory_manager`.gender,
        `pm_dormitory_manager`.`birth`,
        `pm_dormitory_manager`.`employment_status`,
        `pm_phone_number`.`phone_number`,
        `pm_dormitory_manager`.`create_time` AS 'dormitory_manager_create_time',
        `pm_dormitory_manager`.`update_time` AS 'dormitory_manager_update_time',
        `pm_dormitory_manager`.`community_id`,
        `pm_company`.`name` AS 'company_name',
        `pm_company`.`dormitory_submitted`
        FROM
        `pm_dormitory_manager`
        LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        LEFT JOIN `pm_phone_number` ON `pm_dormitory_manager`.`id` = `pm_phone_number`.`source_id`
        <where>
            <if test="communityIds != null">
                `pm_dormitory_manager`.`community_id`
                <choose>
                    <when test="communityIds.size eq 1">
                        = #{communityIds[0]}
                    </when>
                    <otherwise>
                        IN
                        <foreach collection="communityIds" separator="," open="(" close=")" item="communityId">
                            #{communityId}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            AND `pm_phone_number`.`source_id` = #{phoneNumberSourceTypeEnum}
        </where>
        ORDER BY `pm_dormitory_manager`.`id`
    </select>
    <select id="selectAndCommunityById" resultMap="correlationResultMap">
        SELECT `pm_dormitory_manager`.`id` AS 'dormitory_manager_id',
            `pm_dormitory_manager`.`name` AS 'dormitory_manager_name',
            `pm_dormitory_manager`.gender,
            `pm_dormitory_manager`.`birth`,
            `pm_dormitory_manager`.`political_status`,
            `pm_dormitory_manager`.`employment_status`,
            `pm_dormitory_manager`.`education`,
            `pm_dormitory_manager`.`address`,
            `pm_dormitory_manager`.`manager_address`,
            `pm_dormitory_manager`.`manager_count`,
            `pm_phone_number`.`phone_number`,
            `pm_dormitory_manager`.`create_time` AS 'dormitory_manager_create_time',
            `pm_dormitory_manager`.`update_time` AS 'dormitory_manager_update_time',
            `pm_dormitory_manager`.`subcontractor_id`,
            `pm_dormitory_manager`.`community_id`,
            `pm_company`.`name` AS 'company_name',
            `pm_company`.`dormitory_submitted`
        FROM `pm_dormitory_manager`
                 LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
                 LEFT JOIN `pm_phone_number` ON `pm_dormitory_manager`.`id` = `pm_phone_number`.`source_id`
        WHERE `pm_dormitory_manager`.`id` = #{id} AND `pm_phone_number`.`source_id` = 1
    </select>
    <select id="selectByUserData" resultMap="correlationResultMap">
        SELECT `pm_company`.`name` AS 'company_name',
        `pm_dormitory_manager`.`id` AS 'dormitory_manager_id',
        `pm_dormitory_manager`.`name` AS 'dormitory_manager_name',
        `pm_dormitory_manager`.gender,
        `pm_dormitory_manager`.`birth`,
        `pm_dormitory_manager`.`political_status`,
        `pm_dormitory_manager`.`employment_status`,
        `pm_dormitory_manager`.`education`,
        `pm_dormitory_manager`.`address`,
        `pm_dormitory_manager`.`manager_address`,
        `pm_dormitory_manager`.`manager_count`,
        `pm_phone_number`.`phone_number`,
        `pm_dormitory_manager`.`create_time` AS 'dormitory_manager_create_time',
        `pm_dormitory_manager`.`update_time` AS 'dormitory_manager_update_time',
        `pm_subcontractor`.`name` AS 'subcontractor_name',
        `pm_company`.`subdistrict_id`
        FROM `pm_dormitory_manager`
        LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        LEFT JOIN pm_subcontractor ON `pm_dormitory_manager`.`subcontractor_id` = `pm_subcontractor`.`id`
        LEFT JOIN `pm_phone_number` ON `pm_dormitory_manager`.`id` = `pm_phone_number`.`source_id`
        <where>
            <foreach collection="userData" item="item" separator="OR">
                <choose>
                    <when test="item.companyType == subdistrictCompanyType">
                        `pm_company`.`subdistrict_id` = #{item.companyId}
                    </when>
                    <when test="item.companyType == communityCompanyType">
                        `pm_dormitory_manager`.`community_id` = #{item.companyId}
                    </when>
                </choose>
            </foreach>
            AND `pm_phone_number`.`source_id` = 1
        </where>
    </select>
    <select id="selectByUserRole" resultMap="correlationResultMap">
        SELECT
        `pm_dormitory_manager`.`id` AS 'dormitory_manager_id',
        `pm_dormitory_manager`.`name` AS 'dormitory_manager_name',
        `pm_dormitory_manager`.gender,
        TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) AS 'age',
        `pm_dormitory_manager`.`employment_status`,
        `pm_phone_number`.`phone_number`,
        `pm_dormitory_manager`.`create_time` AS 'dormitory_manager_create_time',
        `pm_dormitory_manager`.`update_time` AS 'dormitory_manager_update_time',
        `pm_dormitory_manager`.`community_id`,
        `pm_company`.`name` AS 'company_name'
        FROM
        `pm_dormitory_manager`
        LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        LEFT JOIN `pm_phone_number` ON `pm_dormitory_manager`.`id` = `pm_phone_number`.`source_id`
        <where>
            <if test="object.name != null">
                `pm_dormitory_manager`.`name` LIKE CONCAT('%', #{object.name}, '%')
            </if>
            <if test="object.gender != null and object.gender != -1">
                AND `pm_dormitory_manager`.`gender` = #{object.gender}
            </if>
            <if test="object.address != null">
                AND `pm_dormitory_manager`.`address` LIKE CONCAT('%', #{object.address}, '%')
            </if>
            <if test="object.phoneNumbers != null">
                AND `pm_phone_number`.`phone_number` LIKE CONCAT('%', #{object.phoneNumbers[0].phoneNumber}, '%')
                AND `pm_phone_number`.`source_type` = 0
            </if>
            <choose>
                <when test="companyType == communityCompanyType">
                    AND `pm_dormitory_manager`.`community_id` = #{companyId}
                </when>
                <when test="companyType == subdistrictCompanyType">
                    AND `pm_company`.`subdistrict_id` = #{companyId}
                </when>
            </choose>
        </where>
        ORDER BY `pm_dormitory_manager`.`id`
    </select>
    <select id="selectLastIdByCommunityId" resultType="java.lang.String">
        SELECT `id`
        FROM `pm_dormitory_manager`
        WHERE `community_id` = #{communityId}
        ORDER BY `id` DESC
        LIMIT 1
    </select>
    <select id="selectByNameAndAddress" resultMap="correlationResultMap">
        SELECT
        `pm_dormitory_manager`.`name` AS 'dormitory_manager_name',
        `pm_dormitory_manager`.`community_id`,
        `pm_company`.`name` AS 'company_name'
        FROM `pm_dormitory_manager`
        LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        <where>
            CONCAT(`pm_dormitory_manager`.`name`, `pm_dormitory_manager`.`address`) = #{nameAddress}
            <if test="id != null">
                AND `pm_dormitory_manager`.`id` != #{id}
            </if>
            AND `pm_company`.`subdistrict_id` = #{subdistrictId}
        </where>
    </select>
    <select id="selectByPhones" resultMap="correlationResultMap">
        SELECT
        `pm_dormitory_manager`.`id` AS 'dormitory_manager_id',
        `pm_dormitory_manager`.`name` AS 'dormitory_manager_name',
        `pm_phone_number`.`phone_number`,
        `pm_dormitory_manager`.`community_id`,
        `pm_company`.`name` AS 'company_name'
        FROM `pm_dormitory_manager`
        LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        LEFT JOIN `pm_phone_number` ON `pm_dormitory_manager`.`id` = `pm_phone_number`.`source_id`
        <where>
            <foreach collection="phones" item="phone" separator="OR">
                `pm_phone_number`.`phone_number` = #{phone.phoneNumber}
            </foreach>
            <if test="id != null">
                AND `pm_dormitory_manager`.`id` != #{id}
            </if>
            AND `pm_phone_number`.`source_type` = #{sourceType}
            AND `pm_company`.`subdistrict_id` = #{subdistrictId}
        </where>
    </select>
    <select id="countGenderAll" resultType="java.util.Map">
        SELECT COALESCE(SUM(IF(gender = 0, 1, 0)), 0) AS 'male',
            COALESCE(SUM(IF(gender = 1, 1, 0)), 0) AS 'female'
        FROM `pm_dormitory_manager`
    </select>
    <select id="countGenderByCommunityId" resultType="java.util.Map">
        SELECT COALESCE(SUM(IF(gender = 0, 1, 0)), 0) AS 'male',
            COALESCE(SUM(IF(gender = 1, 1, 0)), 0) AS 'female'
        FROM `pm_dormitory_manager`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countGenderBySubdistrictId" resultType="java.util.Map">
        SELECT COALESCE(SUM(IF(`pm_dormitory_manager`.gender = 0, 1, 0)), 0) AS 'male',
            COALESCE(SUM(IF(`pm_dormitory_manager`.gender = 1, 1, 0)), 0) AS 'female'
        FROM `pm_dormitory_manager`
                 LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        WHERE `pm_company`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countAgeRangeAll" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 20, 1, 0)), 0) AS '20岁以下',
            COALESCE(SUM(IF(
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 21 AND
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 30,
                        1, 0)), 0) AS '21岁~30岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 31
                                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                                &lt;
                                    40, 1, 0)), 0) AS '31岁~40岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 41
                                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                                &lt;
                                    50, 1, 0)), 0) AS '41岁~50岁',
            COALESCE(SUM(
                         IF(
                                     TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 51
                                 AND
                                     TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                                         &lt;
                                     60, 1, 0)), 0) AS '51岁~60岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 61
                                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                                &lt;
                                    70, 1, 0)), 0) AS '61岁~70岁',
            COALESCE(SUM(IF(
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) > 71 AND
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 80, 1,
                        0)), 0) '71岁~80岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 81, 1, 0)), 0) '81岁以上'
        FROM `pm_dormitory_manager`
    </select>
    <select id="countAgeRangeCommunityId" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 20, 1, 0)), 0) '20岁以下',
            COALESCE(SUM(IF(
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 21 AND
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 30,
                        1, 0)), 0) '21岁~30岁',
            COALESCE(SUM(IF(
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 31 AND
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 40,
                        1, 0)), 0) '31岁~40岁',
            COALESCE(SUM(IF(
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 41 AND
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 50,
                        1, 0)), 0) '41岁~50岁',
            COALESCE(SUM(IF(
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 51 AND
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 60,
                        1, 0)), 0) '51岁~60岁',
            COALESCE(SUM(IF(
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 61 AND
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 70,
                        1, 0)), 0) '61岁~70岁',
            COALESCE(SUM(IF(
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 71 AND
                        TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &lt; 80,
                        1, 0)), 0) '71岁~80岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 81, 1, 0)), 0) '81岁以上'
        FROM `pm_dormitory_manager`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countAgeRangeSubdistrictId" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &lt; 20, 1, 0)),
                        0) '20岁以下',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &gt; 21 AND
                            TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &lt; 30, 1, 0)),
                     0) '21岁~30岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &gt; 31 AND
                            TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &lt; 40, 1, 0)),
                     0) '31岁~40岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &gt; 41 AND
                            TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &lt; 50, 1, 0)),
                     0) '41岁~50岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &gt; 51 AND
                            TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &lt; 60, 1, 0)),
                     0) '51岁~60岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &gt; 61 AND
                            TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &lt; 70, 1, 0)),
                     0) '61岁~70岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &gt; 71 AND
                            TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &lt; 80, 1, 0)),
                     0) '71岁~80岁',
            COALESCE(SUM(IF(TIMESTAMPDIFF(YEAR, `pm_dormitory_manager`.`birth`, CURDATE()) &gt; 81, 1, 0)), 0) '81岁以上'
        FROM `pm_dormitory_manager`
                 LEFT JOIN `pm_company` ON pm_dormitory_manager.community_id = `pm_company`.`id`
        WHERE `pm_company`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countEducationRangeAll" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`education` = 0, 1, 0)), 0) '文盲',
            COALESCE(SUM(IF(`education` = 1, 1, 0)), 0) '小学',
            COALESCE(SUM(IF(`education` = 2, 1, 0)), 0) '初中',
            COALESCE(SUM(IF(`education` = 3, 1, 0)), 0) '中专',
            COALESCE(SUM(IF(`education` = 4, 1, 0)), 0) '高中',
            COALESCE(SUM(IF(`education` = 5, 1, 0)), 0) '大专',
            COALESCE(SUM(IF(`education` = 6, 1, 0)), 0) '本科',
            COALESCE(SUM(IF(`education` = 7, 1, 0)), 0) '硕士研究生',
            COALESCE(SUM(IF(`education` = 8, 1, 0)), 0) '博士研究生'
        FROM `pm_dormitory_manager`
    </select>
    <select id="countEducationRangeCommunityId" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`education` = 0, 1, 0)), 0) '文盲',
            COALESCE(SUM(IF(`education` = 1, 1, 0)), 0) '小学',
            COALESCE(SUM(IF(`education` = 2, 1, 0)), 0) '初中',
            COALESCE(SUM(IF(`education` = 3, 1, 0)), 0) '中专',
            COALESCE(SUM(IF(`education` = 4, 1, 0)), 0) '高中',
            COALESCE(SUM(IF(`education` = 5, 1, 0)), 0) '大专',
            COALESCE(SUM(IF(`education` = 6, 1, 0)), 0) '本科',
            COALESCE(SUM(IF(`education` = 7, 1, 0)), 0) '硕士研究生',
            COALESCE(SUM(IF(`education` = 8, 1, 0)), 0) '博士研究生'
        FROM `pm_dormitory_manager`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countEducationRangeSubdistrictId" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 0, 1, 0)), 0) '文盲',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 1, 1, 0)), 0) '小学',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 2, 1, 0)), 0) '初中',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 3, 1, 0)), 0) '中专',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 4, 1, 0)), 0) '高中',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 5, 1, 0)), 0) '大专',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 6, 1, 0)), 0) '本科',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 7, 1, 0)), 0) '硕士研究生',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`education` = 8, 1, 0)), 0) '博士研究生'
        FROM `pm_dormitory_manager`
                 LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        WHERE `pm_company`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countPoliticalStatusRangeAll" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`political_status` = 0, 1, 0)), 0) '群众',
            COALESCE(SUM(IF(`political_status` = 1, 1, 0)), 0) '共产党员',
            COALESCE(SUM(IF(`political_status` = 2, 1, 0)), 0) '预备共产党员',
            COALESCE(SUM(IF(`political_status` = 3, 1, 0)), 0) '共青团员',
            COALESCE(SUM(IF(`political_status` = 4, 1, 0)), 0) '预备共青团员',
            COALESCE(SUM(IF(`political_status` = 5, 1, 0)), 0) '其它'
        FROM `pm_dormitory_manager`
    </select>
    <select id="countPoliticalStatusRangeCommunityId" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`political_status` = 0, 1, 0)), 0) '群众',
            COALESCE(SUM(IF(`political_status` = 1, 1, 0)), 0) '共产党员',
            COALESCE(SUM(IF(`political_status` = 2, 1, 0)), 0) '预备共产党员',
            COALESCE(SUM(IF(`political_status` = 3, 1, 0)), 0) '共青团员',
            COALESCE(SUM(IF(`political_status` = 4, 1, 0)), 0) '预备共青团员',
            COALESCE(SUM(IF(`political_status` = 5, 1, 0)), 0) '其它'
        FROM `pm_dormitory_manager`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countPoliticalStatusRangeSubdistrictId" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`pm_dormitory_manager`.`political_status` = 0, 1, 0)), 0) '群众',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`political_status` = 1, 1, 0)), 0) '共产党员',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`political_status` = 2, 1, 0)), 0) '预备共产党员',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`political_status` = 3, 1, 0)), 0) '共青团员',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`political_status` = 4, 1, 0)), 0) '预备共青团员',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`political_status` = 5, 1, 0)), 0) '其它'
        FROM `pm_dormitory_manager`
                 LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        WHERE `pm_company`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countWorkStatusRangeAll" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`employment_status` = 0, 1, 0)), 0) '在职',
            COALESCE(SUM(IF(`employment_status` = 1, 1, 0)), 0) '退休',
            COALESCE(SUM(IF(`employment_status` = 2, 1, 0)), 0) '无业'
        FROM `pm_dormitory_manager`
    </select>
    <select id="countWorkStatusRangeCommunityId" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`employment_status` = 0, 1, 0)), 0) '在职',
            COALESCE(SUM(IF(`employment_status` = 1, 1, 0)), 0) '退休',
            COALESCE(SUM(IF(`employment_status` = 2, 1, 0)), 0) '无业'
        FROM `pm_dormitory_manager`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countWorkStatusRangeSubdistrictId" resultType="java.util.LinkedHashMap">
        SELECT COALESCE(SUM(IF(`pm_dormitory_manager`.`employment_status` = 0, 1, 0)), 0) '在职',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`employment_status` = 1, 1, 0)), 0) '退休',
            COALESCE(SUM(IF(`pm_dormitory_manager`.`employment_status` = 2, 1, 0)), 0) '无业'
        FROM `pm_dormitory_manager`
                 LEFT JOIN `pm_company` ON `pm_dormitory_manager`.`community_id` = `pm_company`.`id`
        WHERE `pm_company`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countForGroupSubdistrict" resultType="java.util.Map">
        SELECT `pm_subdistrict`.`name`, COUNT(`pm_dormitory_manager`.`id`) AS 'value'
        FROM `pm_subdistrict`
                 LEFT JOIN `pm_company` ON `pm_subdistrict`.`id` = `pm_company`.`subdistrict_id`
                 LEFT JOIN `pm_dormitory_manager`
        ON `pm_company`.`id` = `pm_dormitory_manager`.`community_id`
        GROUP BY `pm_subdistrict`.`id`
    </select>
    <select id="countForGroupCommunity" resultType="java.util.Map">
        SELECT `pm_company`.`name`, COUNT(`pm_dormitory_manager`.`id`) AS 'value'
        FROM `pm_company`
                 LEFT JOIN `pm_dormitory_manager`
        ON `pm_company`.`id` = `pm_dormitory_manager`.`community_id`
        WHERE `pm_company`.`subdistrict_id` = #{subdistrictId}
        GROUP BY `pm_company`.`id`
    </select>
    <select id="countForGroupByCommunityId" resultType="java.util.Map">
        SELECT `pm_company`.`name`, COUNT(`pm_dormitory_manager`.`id`) AS 'value'
        FROM `pm_company`
                 LEFT JOIN `pm_dormitory_manager`
        ON `pm_company`.`id` = `pm_dormitory_manager`.`community_id`
        WHERE `pm_company`.`id` = #{communityId}
    </select>
    <select id="sumManagerCountForGroupSubdistrict" resultType="java.util.Map">
        SELECT `pm_subdistrict`.`name`, COALESCE(SUM(`pm_dormitory_manager`.`manager_count`), 0) 'value'
        FROM `pm_subdistrict`
                 LEFT JOIN `pm_company` ON `pm_subdistrict`.`id` = `pm_company`.`subdistrict_id`
                 LEFT JOIN `pm_dormitory_manager`
        ON `pm_company`.`id` = `pm_dormitory_manager`.`community_id`
        GROUP BY `pm_subdistrict`.`id`
    </select>
    <select id="sumManagerCountForGroupByCommunityId" resultType="java.util.Map">
        SELECT `pm_company`.`name`, COALESCE(SUM(`pm_dormitory_manager`.`manager_count`), 0) 'value'
        FROM `pm_company`
                 LEFT JOIN `pm_dormitory_manager`
        ON `pm_company`.`id` = `pm_dormitory_manager`.`community_id`
        WHERE `pm_company`.`id` = #{communityId}
    </select>
    <select id="countBySubcontractorId" resultType="java.lang.Long">
        SELECT COUNT(`id`)
        FROM `pm_dormitory_manager`
        WHERE `subcontractor_id` = #{subcontractorId}
    </select>
    <select id="sumManagerCountForGroupCommunity" resultType="java.util.Map">
        SELECT `pm_company`.`name`, COALESCE(SUM(`pm_dormitory_manager`.`manager_count`), 0) 'value'
        FROM `pm_company`
                 LEFT JOIN `pm_dormitory_manager`
        ON `pm_company`.`id` = `pm_dormitory_manager`.`community_id`
        WHERE `pm_company`.`subdistrict_id` = #{subdistrictId}
        GROUP BY `pm_company`.`id`
    </select>
</mapper>
